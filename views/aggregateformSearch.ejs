<!DOCTYPE html>
<html>
<head>
    <title>All Users</title>
    <script>
        window.onload = function() {
            var form = document.getElementById('searchForm');
            var input = document.getElementById('searchInput');
            var btn = document.querySelector('.btn');

            form.onsubmit = function(e) {
                e.preventDefault();
                btn.style.opacity = 0.5;
                fetch("/serachusers/email/admin/search/" + input.value)
                    .then(response => response.text())
                    .then(data => {
                        document.body.innerHTML = data;
                        btn.style.opacity = 1;
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        btn.style.opacity = 1;
                    });
            };
        };
    </script>

</head>
<style>
    input[type="text"] {
    width: 100%;
    padding: 12px 20px;
    margin: 8px 0;
    box-sizing: border-box;
    border: 2px solid #04AA6D;
    border-radius: 4px;
}
.btn {
    background-color: #04AA6D;
    color: white;
    padding: 16px 32px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

</style>
<body>
    <form id="searchForm" method="GET">
        <div class="box">
                <span class="text-center">Search Users</span>
                <div class="input-container">
                    <label for="nme"><span>What's your name?</span></label>
                    <input id="searchInput" type="text" name="name" class="question" autocomplete="off" required/>
                </div>
                <button type="submit" class="btn">submit</button>
        </div>
         </form>

         <% if (typeof searchResults !== 'undefined' && searchResults.length > 0) { %>
          <% const tables = {} %>
      
          <% searchResults.forEach(result => { %>
              <% if (!tables[result.collectionType]) { %>
                  <% tables[result.collectionType] = [] %>
              <% } %>
              <% tables[result.collectionType].push(result) %>
          <% }) %>
      
          <% Object.keys(tables).forEach(collectionType => { %>
              <h2><%= collectionType %> Table</h2>
              <table class="table">
                  <thead class="table__thead">
                      <tr class="table__head">
                          <% Object.keys(tables[collectionType][0]).forEach(key => { %>
                              <th class="table__th"><%= key %></th>
                          <% }) %>
                      </tr>
                  </thead>
                  <tbody class="table__tbody">
                      <% tables[collectionType].forEach(result => { %>
                          <tr class="table__tr">
                              <% Object.values(result).forEach(value => { %>
                                  <td class="table__td table__mobile-title"><%= value %></td>
                              <% }) %>
                          </tr>
                      <% }) %>
                  </tbody>
              </table>
          <% }) %>
      
      <% } else { %>
          <p>No user found with the specified criteria</p>
      <% } %>
      
</body>
</html>
<style>
    /* core styles for table */

.table {
  width: 100%;
  border-spacing: 0;
  border-collapse: collapse;
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12), 0 1px 2px 0 rgba(0, 0, 0, 0.24);
  background-color: var(--tableBgColor, #fff);
}

.table__thead {
  background-color: var(--tableTitleBgColor);
  color: var(--tableTitleTextColor);
}

.table__mobile-caption {
  display: none;
}

.table__td,
.table__th {
  padding: var(--tableCellPadding, 20px);
  box-sizing: border-box;
}

@media screen and (min-width: 769px) {
  .table__tr:hover {
    background-color: var(--tableRowBgColorHover);
  }

  .table__td:first-child,
  .table__th:first-child {
    width: 30%;
    text-align: left;
  }

  .table__td,
  .table__th {
    text-align: center;
  }
}

@media screen and (max-width: 768px) {
  .table,
  .table__thead,
  .table__tbody,
  .table__tr {
    display: block;
  }

  .table__td {
    display: flex;
  }

  .table__head {
    display: none;
  }

  .table__mobile-title {
    background-color: var(--tableTitleBgColor);
    color: var(--tableTitleTextColor);
  }

  .table__td {
    border-bottom: 1px solid var(--tableSeparatorColor);
  }

  .table__td:last-of-type {
    border-bottom: none;
  }

  .table__mobile-caption,
  .table__value {
    display: block;
    width: 50%;
    box-sizing: border-box;
  }

  .table__mobile-caption {
    padding-right: 2%;
  }
}

/* demo styles for table */

.table {
  --tableCellPadding: 2rem;
  --tableTitleBgColor: #5668ca;
  --tableTitleTextColor: #fff;
  --tableRowBgColorHover: #f0f0f0;
  --tableSeparatorColor: #eee;
}

/*
* demo page
*/

@media screen and (min-width: 768px) {
  html {
    font-size: 62.5%;
  }
}

@media screen and (max-width: 767px) {
  html {
    font-size: 50%;
  }
}
</style>
